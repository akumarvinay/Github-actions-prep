name: Java application

on:
  push:
    branches: ["master"]

jobs:
  compile:
    runs-on: self-hosted-vinay #ubuntu-latest
    steps:
      - name: checking out source code
        uses: actions/checkout@v4
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: "17"
          distribution: "temurin"
          cache: maven
      - name: Build with Maven
        run: mvn -B compile --file pom.xml

  security-check:
    runs-on: self-hosted-vinay #ubuntu-latest
    needs: compile # so that security-check job runs after compile job
    steps:
      - name: checkout source code
        uses: actions/checkout@v4

      - name: Installing trivy setup
        run: |
          sudo apt-get install -y  wget apt-transport-https gnupg lsb-release
          wget -qO - https://aquasecurity.github.io/trivy-repo/deb/public.key | sudo apt-key add -
          echo deb https://aquasecurity.github.io/trivy-repo/deb $(lsb_release -sc) main | sudo tee -a /etc/apt/sources.list.d/trivy.list
          sudo apt-get update -y
          sudo apt-get install -y trivy

      - name: running Trivy
        run: trivy fs --output trivy-report.json --format table .

      - name: Installing git leaks
        run: sudo apt install gitleaks -y

      - name: running git leaks
        run: gitleaks detect source . -r git-leaks-report.json -f json

  testCase:
    runs-on: self-hosted-vinay
    needs: security-check # so that testCase job runs after security-check job
    steps:
      - name: source code checkout
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: "17"
          distribution: "temurin"
          cache: maven

      - name: running test cases
        run: mvn test --file pom.xml

  Build-and-sonarScan:
    runs-on: self-hosted-vinay
    needs: testCase
    steps:
      - name: checkout source code
        uses: actions/checkout@v4
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: "17"
          distribution: "temurin"
          cache: maven
      - name: maven package creation
        run: mvn package --file pom.xml

      - name: SonarQube Scan
        uses: SonarSource/sonarqube-scan-action@v5.1.0 # Ex: v4.1.0, See the latest version at https://github.com/marketplace/actions/official-sonarqube-scan
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ vars.SONAR_HOST_URL }}
      # Check the Quality Gate status.
      - name: SonarQube Quality Gate check
        id: sonarqube-quality-gate-check
        uses: sonarsource/sonarqube-quality-gate-action@master
        with:
          pollingTimeoutSec: 600
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ vars.SONAR_HOST_URL }}
      - name: upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: my-artifacts
          path: target/*.jar # Adjust the path to your artifact as needed

  build-and-upload-docker-image:
    runs-on: self-hosted-vinay
    needs:  Build-and-sonarScan
    steps:
      - name: source code checkout
        uses: actions/checkout@v4
      - name: download artifacts
        uses: actions/download-artifact@v4
        with:
          name: my-artifacts
          path: app
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
              username: ${{ vars.DOCKERHUB_USERNAME }}
              password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          push: true
          tags: vinay/bank-app:${{ github.run_number }}-${{ github.sha }}
      